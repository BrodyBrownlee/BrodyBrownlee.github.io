{
  "version": 3,
  "sources": ["../../../../node_modules/three/src/renderers/common/Constants.js", "../../../../node_modules/three/src/renderers/common/BufferUtils.js"],
  "sourcesContent": ["export const AttributeType = {\n\tVERTEX: 1,\n\tINDEX: 2,\n\tSTORAGE: 3,\n\tINDIRECT: 4\n};\n\n// size of a chunk in bytes (STD140 layout)\n\nexport const GPU_CHUNK_BYTES = 16;\n\n// @TODO: Move to src/constants.js\n\nexport const BlendColorFactor = 211;\nexport const OneMinusBlendColorFactor = 212;\n", "import { GPU_CHUNK_BYTES } from './Constants.js';\n\nfunction getFloatLength( floatLength ) {\n\n\t// ensure chunk size alignment (STD140 layout)\n\n\treturn floatLength + ( ( GPU_CHUNK_BYTES - ( floatLength % GPU_CHUNK_BYTES ) ) % GPU_CHUNK_BYTES );\n\n}\n\nfunction getVectorLength( count, vectorLength = 4 ) {\n\n\tconst strideLength = getStrideLength( vectorLength );\n\n\tconst floatLength = strideLength * count;\n\n\treturn getFloatLength( floatLength );\n\n}\n\nfunction getStrideLength( vectorLength ) {\n\n\tconst strideLength = 4;\n\n\treturn vectorLength + ( ( strideLength - ( vectorLength % strideLength ) ) % strideLength );\n\n}\n\nexport {\n\tgetFloatLength,\n\tgetVectorLength,\n\tgetStrideLength\n};\n"],
  "mappings": ";;;AASO,IAAM,kBAAkB;;;ACP/B,SAAS,eAAgB,aAAc;AAItC,SAAO,eAAkB,kBAAoB,cAAc,mBAAsB;AAElF;AAEA,SAAS,gBAAiB,OAAO,eAAe,GAAI;AAEnD,QAAM,eAAe,gBAAiB,YAAa;AAEnD,QAAM,cAAc,eAAe;AAEnC,SAAO,eAAgB,WAAY;AAEpC;AAEA,SAAS,gBAAiB,cAAe;AAExC,QAAM,eAAe;AAErB,SAAO,gBAAmB,eAAiB,eAAe,gBAAmB;AAE9E;",
  "names": []
}
